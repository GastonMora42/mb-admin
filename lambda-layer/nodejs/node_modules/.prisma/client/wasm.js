
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.2.1
 * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
 */
Prisma.prismaVersion = {
  client: "6.2.1",
  engine: "4123509d24aa4dede1e864b46351bf2790323b69"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlumnoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  dni: 'dni',
  activo: 'activo',
  fechaNacimiento: 'fechaNacimiento',
  email: 'email',
  telefono: 'telefono',
  numeroEmergencia: 'numeroEmergencia',
  direccion: 'direccion',
  obraSocial: 'obraSocial',
  nombreTutor: 'nombreTutor',
  dniTutor: 'dniTutor',
  notas: 'notas',
  fechaIngreso: 'fechaIngreso',
  fechaBaja: 'fechaBaja',
  motivoBaja: 'motivoBaja',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConfiguracionPagoAlumnoScalarFieldEnum = {
  id: 'id',
  alumnoId: 'alumnoId',
  diaPago: 'diaPago',
  metodoPago: 'metodoPago',
  descuentoFijo: 'descuentoFijo',
  observaciones: 'observaciones',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DescuentoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  porcentaje: 'porcentaje',
  activo: 'activo',
  esAutomatico: 'esAutomatico',
  minEstilos: 'minEstilos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DescuentoAplicadoScalarFieldEnum = {
  id: 'id',
  descuentoId: 'descuentoId',
  alumnoId: 'alumnoId',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  activo: 'activo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DeudaScalarFieldEnum = {
  id: 'id',
  alumnoId: 'alumnoId',
  monto: 'monto',
  montoOriginal: 'montoOriginal',
  mes: 'mes',
  anio: 'anio',
  estiloId: 'estiloId',
  pagada: 'pagada',
  fechaPago: 'fechaPago',
  fechaVencimiento: 'fechaVencimiento',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PagoDeudaScalarFieldEnum = {
  id: 'id',
  deudaId: 'deudaId',
  reciboId: 'reciboId',
  monto: 'monto',
  fecha: 'fecha',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConceptoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  monto: 'monto',
  estiloId: 'estiloId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReciboScalarFieldEnum = {
  id: 'id',
  numeroRecibo: 'numeroRecibo',
  fecha: 'fecha',
  fechaEfecto: 'fechaEfecto',
  monto: 'monto',
  montoOriginal: 'montoOriginal',
  descuento: 'descuento',
  periodoPago: 'periodoPago',
  tipoPago: 'tipoPago',
  fueraDeTermino: 'fueraDeTermino',
  esClaseSuelta: 'esClaseSuelta',
  esMesCompleto: 'esMesCompleto',
  alumnoId: 'alumnoId',
  alumnoSueltoId: 'alumnoSueltoId',
  conceptoId: 'conceptoId',
  claseId: 'claseId',
  anulado: 'anulado',
  motivoAnulacion: 'motivoAnulacion',
  referenciaRecibo: 'referenciaRecibo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EstiloScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  monto: 'monto',
  descripcion: 'descripcion',
  importe: 'importe',
  profesorId: 'profesorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AlumnoEstilosScalarFieldEnum = {
  id: 'id',
  alumnoId: 'alumnoId',
  estiloId: 'estiloId',
  activo: 'activo',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  montoPersonalizado: 'montoPersonalizado',
  descuentoPersonalizado: 'descuentoPersonalizado',
  observaciones: 'observaciones'
};

exports.Prisma.ProfesorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  dni: 'dni',
  fechaNacimiento: 'fechaNacimiento',
  direccion: 'direccion',
  cuit: 'cuit',
  email: 'email',
  telefono: 'telefono',
  fechaIngreso: 'fechaIngreso',
  porcentajePorDefecto: 'porcentajePorDefecto',
  porcentajeClasesSueltasPorDefecto: 'porcentajeClasesSueltasPorDefecto',
  activo: 'activo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CtaCteScalarFieldEnum = {
  id: 'id',
  saldo: 'saldo',
  alumnoId: 'alumnoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CajaDiariaScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  apertura: 'apertura',
  cierre: 'cierre',
  diferencia: 'diferencia',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClaseScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  profesorId: 'profesorId',
  estiloId: 'estiloId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AsistenciaScalarFieldEnum = {
  id: 'id',
  claseId: 'claseId',
  alumnoId: 'alumnoId',
  asistio: 'asistio',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AlumnoSueltoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  dni: 'dni',
  telefono: 'telefono',
  email: 'email',
  alumnoRegularId: 'alumnoRegularId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LiquidacionScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  mes: 'mes',
  anio: 'anio',
  profesorId: 'profesorId',
  montoTotal: 'montoTotal',
  montoCursos: 'montoCursos',
  montoClasesSueltas: 'montoClasesSueltas',
  porcentajeCursos: 'porcentajeCursos',
  porcentajeClasesSueltas: 'porcentajeClasesSueltas',
  estado: 'estado',
  metodoPago: 'metodoPago',
  fechaPago: 'fechaPago',
  observaciones: 'observaciones',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DetalleLiquidacionScalarFieldEnum = {
  id: 'id',
  liquidacionId: 'liquidacionId',
  reciboId: 'reciboId',
  montoOriginal: 'montoOriginal',
  porcentaje: 'porcentaje',
  montoLiquidado: 'montoLiquidado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TipoPago = exports.$Enums.TipoPago = {
  EFECTIVO: 'EFECTIVO',
  MERCADO_PAGO: 'MERCADO_PAGO',
  TRANSFERENCIA: 'TRANSFERENCIA',
  DEBITO_AUTOMATICO: 'DEBITO_AUTOMATICO',
  OTRO: 'OTRO'
};

exports.EstadoLiquidacion = exports.$Enums.EstadoLiquidacion = {
  PENDIENTE: 'PENDIENTE',
  PAGADA: 'PAGADA',
  ANULADA: 'ANULADA'
};

exports.Prisma.ModelName = {
  Alumno: 'Alumno',
  ConfiguracionPagoAlumno: 'ConfiguracionPagoAlumno',
  Descuento: 'Descuento',
  DescuentoAplicado: 'DescuentoAplicado',
  Deuda: 'Deuda',
  PagoDeuda: 'PagoDeuda',
  Concepto: 'Concepto',
  Recibo: 'Recibo',
  Estilo: 'Estilo',
  AlumnoEstilos: 'AlumnoEstilos',
  Profesor: 'Profesor',
  CtaCte: 'CtaCte',
  CajaDiaria: 'CajaDiaria',
  Clase: 'Clase',
  Asistencia: 'Asistencia',
  AlumnoSuelto: 'AlumnoSuelto',
  Liquidacion: 'Liquidacion',
  DetalleLiquidacion: 'DetalleLiquidacion'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
